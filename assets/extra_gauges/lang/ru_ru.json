{
  "itemGroup.extra_gauges": "Create: Дополнительные Датчики",

  "item.extra_gauges.logic_gauge": "Логический фабричный датчик",
  "item.extra_gauges.integer_gauge": "Целочисленный фабричный датчик",
  "item.extra_gauges.comparator_gauge": "Компараторный фабричный датчик",
  "item.extra_gauges.counter_gauge": "Счётный фабричный датчик",
  "item.extra_gauges.passive_gauge": "Пассивный фабричный контроллер",
  "item.extra_gauges.string_gauge": "Строковый фабричный датчик",
  "block.extra_gauges.integer_selector": "Целочисленный селектор",
  "block.extra_gauges.display_collector": "Строковый приёмник",

  "extra_gauges.panel.panels_connected": "%s теперь указывает на %s",
  "extra_gauges.panel.custom_panel_on_restocker": "Нельзя установить пользовательский фабричный датчик в режиме пополнения",

  "create.logistics.logic_gate": "Логический вентиль",
  "logic_gauge.gate.or": "ИЛИ (OR; активируется, если любой вход активен)",
  "logic_gauge.gate.and": "И (AND; активируется, если все входы активны)",
  "logic_gauge.gate.nor": "НЕ ИЛИ (NOR; активируется, если все входы неактивны)",
  "logic_gauge.gate.nand": "НЕ И (NAND; активируется, если любой вход неактивен)",
  "logic_gauge.gate.xor": "Исключающее ИЛИ (XOR; активируется при нечётном количестве активных входов)",
  "logic_gauge.gate.xnor": "Исключающее ИЛИ с инверсией (XNOR; активируется при чётном количестве активных входов)",

  "create.logistics.int_operation": "Целочисленная операция",
  "integer_gauge.mode.add": "Сложение (суммирует все входы)",
  "integer_gauge.mode.subtract": "Вычитание (суммирует все входы, но даёт отрицательный результат)",
  "integer_gauge.mode.multiply": "Умножение (перемножает все входы)",

  "create.logistics.comparator_value": "Сравниваемая константа",
  "comparator_gauge.mode.equals": "Вход равен константе",
  "comparator_gauge.mode.different": "Вход отличается от константы",
  "comparator_gauge.mode.greater": "Вход больше константы",
  "comparator_gauge.mode.greater_equals": "Вход больше или равен константе",
  "comparator_gauge.mode.less": "Вход меньше константы",
  "comparator_gauge.mode.less_equals": "Вход меньше или равен константе",
  "create.logistics.comparator_gauge.title": "Входы будут просуммированы",

  "create.logistics.counter_threshold": "Пороговое значение",

  "create.display_collector.set": "Позиция источника выбрана",
  "create.display_collector.success": "Успешно привязано к позиции источника",

  "extra_gauges.ponder.logic_gauge.header": "Использованием логических фабричных датчиков для передачи редстоун-сигналов",
  "extra_gauges.ponder.logic_gauge.text_1": "Логические датчики передают редстоун-сигнал от одних прикреплённых к стене компонентов к другим",
  "extra_gauges.ponder.logic_gauge.text_2": "В качестве входов можно использовать §9рычаги§r, §9аналоговые §9рычаги§r, §9редстоуновые §9передатчики §9в §9режиме §9приёма§r и §6другие §6фабричные датчики",
  "extra_gauges.ponder.logic_gauge.text_3": "В качестве выходов — §9редстоуновые §9передатчики §9в §9режиме §9передачи§r и §6другие §6фабричные §9датчики",
  "extra_gauges.ponder.logic_gauge.text_4": "§eИмейте §eв §eвиду§r, что §rрычаги и аналоговые рычаги §cне §cотправляют §cобновление §cмгновенно§r, в отличие от редстоуновых передатчиков",
  "extra_gauges.ponder.logic_gauge.text_5": "Слишком просто? Посмотрим, что произойдёт при наличии §6дополнительных §6входов",
  "extra_gauges.ponder.logic_gauge.text_6": "Фабричный датчик, находящийся по умолчанию находится в режиме §6ИЛИ§r, активируется, когда один ИЛИ другой рычаг включён",
  "extra_gauges.ponder.logic_gauge.text_7": "Удерживая ПКМ, можно изменить тип логического вентиля — например, на §6И",
  "extra_gauges.ponder.logic_gauge.text_8": "Теперь в режиме §6И§r фабричный датчик активируется только, когда оба рычага включены",
  "extra_gauges.ponder.logic_gauge.text_9": "Наконец, с помощью передатчика информации можно показать миру текущее значение логического фабричного датчика",
  "extra_gauges.ponder.logic_gauge_storage.header": "Взаимодействием логических фабричных датчиков с фабричными контроллерами",
  "extra_gauges.ponder.logic_gauge_storage.text_1": "Логические датчики предназначены для взаимодействия с другими датчиками и, конечно же, фабричными контроллерами",
  "extra_gauges.ponder.logic_gauge_storage.text_2": "Когда достигнут порог фабричного датчика (§9в складской сети §964/64 §9алмазов§r)...",
  "extra_gauges.ponder.logic_gauge_storage.text_3": "...логический датчик получит §cредстоун-сигнал",
  "extra_gauges.ponder.logic_gauge_storage.text_4": "С другой стороны, логический датчик подаёт сигнал на другой фабричный контроллер, §cблокируя §cего создание",

  "extra_gauges.ponder.integer_gauge.header": "Использованием целочисленных фабричных датчиков для передачи чисел",
  "extra_gauges.ponder.integer_gauge.text_1": "Целочисленные датчики передают числа от одних прикреплённых к стене компонентов к другим",
  "extra_gauges.ponder.integer_gauge.text_2": "§9Рычаги §rпри активации выдают §615§r...",
  "extra_gauges.ponder.integer_gauge.text_3": "...§9аналоговые §9рычаги §rи §9редстоуновые §9передатчики§r — от §60§r до §615 §rвключительно, в зависимости от состояния...",
  "extra_gauges.ponder.integer_gauge.text_4": "...а подача гораздо больших чисел возможна через §9целочисленные §9селекторы",
  "extra_gauges.ponder.integer_gauge.text_5": "§eИмейте §eв §eвиду§r, что §rрычаги и аналоговые рычаги §cне §cотправляют §cобновление §cмгновенно§r, в отличие от редстоуновых передатчиков и целочисленных селекторов",
  "extra_gauges.ponder.integer_gauge.text_6": "При подключении второго целочисленного датчика...",
  "extra_gauges.ponder.integer_gauge.text_7": "...первый, имеющий теперь §9два §9входа§r, будет выводить §6сумму §rэтих значений (а не 15+7)",
  "extra_gauges.ponder.integer_gauge.text_8": "Удерживая ПКМ, можно изменить операцию на §6вычитание §rили §6умножение",
  "extra_gauges.ponder.integer_gauge_storage.header": "Взаимодействием целочисленных фабричных датчиков с фабричными контроллерами",
  "extra_gauges.ponder.integer_gauge_storage.text_1": "Целочисленные датчики предназначены для взаимодействия с другими датчиками и, конечно же, фабричными контроллерами",
  "extra_gauges.ponder.integer_gauge_storage.text_2": "Когда количество указанного предмета в складской сети изменяется...",
  "extra_gauges.ponder.integer_gauge_storage.text_3": "...целочисленный датчик считывает новое значение",
  "extra_gauges.ponder.integer_gauge_storage.text_4": "С другой стороны, датчик может задать §aцелевое §aколичество §rдля другого фабричного контроллера",

  "extra_gauges.ponder.passive_gauge.header": "Использованием пассивных фабричных контроллеров для оптимизации автоматического создания",
  "extra_gauges.ponder.passive_gauge.text_1": "Пассивные фабричные контроллеры работают подобно §9обычным§r...",
  "extra_gauges.ponder.passive_gauge.text_2": "...но с ним не нужно задавать §9целевое §9количество §rпредметов для создания",
  "extra_gauges.ponder.passive_gauge.text_3": "Когда палок не хватает...",
  "extra_gauges.ponder.passive_gauge.text_4": "...пассивный контроллер отправляет в хранилище только §9необходимое §rдля рецепта §9количество",
  "extra_gauges.ponder.passive_gauge.text_5": "Как только начинается создание, он автоматически §cдеактивируется§r",

  "extra_gauges.ponder.comparator_gauge.header": "Использованием компараторных фабричных датчиков для преобразования чисел в логические значения",
  "extra_gauges.ponder.comparator_gauge.text_1": "Компараторные датчики служат мостами между §9числами §rи §cредстоун-сигналом §r(§cвкл/выкл§r)",
  "extra_gauges.ponder.comparator_gauge.text_2": "Удерживая ПКМ, можно задать константное число...",
  "extra_gauges.ponder.comparator_gauge.text_3": "...которое затем будет §9сравниваться §rс §9входом §rпри помощи §9оператора §r(в данном примере §6>§r)",
  "extra_gauges.ponder.comparator_gauge.text_4": "Если ввести §66§r, а константа равна §98§r, то, поскольку 6 не больше 8, результат — §cложь§r",
  "extra_gauges.ponder.comparator_gauge.text_5": "Однако если изменить входное число на §610§r, условие выполняется, и §cредстоуновый §cпередатчик §rактивируется",

  "extra_gauges.ponder.counter_gauge.header": "Использованием счётных фабричных датчиков для подсчёта редстоун-импульсов",
  "extra_gauges.ponder.counter_gauge.text_1": "Редстоуновый передатчик должен быть установлен таким образом для §cмгновенного §cобновления §cпри §cнажатии §cкнопки",
  "extra_gauges.ponder.counter_gauge.text_2": "Счётные датчики подсчитывают редстоун-импульсы — и, в отличие от вас, не сбиваются со счёту",
  "extra_gauges.ponder.counter_gauge.text_3": "Количество подсчитанных импульсов хранится в виде §9числа§r",
  "extra_gauges.ponder.counter_gauge.text_4": "Удерживая ПКМ, можно изменить §9порог §9счётчика",
  "extra_gauges.ponder.counter_gauge.text_5": "Как только порог оказывается достигнут — в этом примере он равен 3, — счётный датчик выдаёт §cредстоун-сигнал§r",
  "extra_gauges.ponder.counter_gauge.text_6": "Последующий импульс сбрасывает счётчик",

  "extra_gauges.ponder.string_gauge.header": "Использованием строковых фабричных датчиков для обработки текстовых значений",
  "extra_gauges.ponder.string_gauge.text_1": "Строковые датчики передают текстовые строки от одних компонентов, прикреплённых к стене, к другим",
  "extra_gauges.ponder.string_gauge.text_2": "§bHello!",
  "extra_gauges.ponder.string_gauge.text_3": "При наличии нескольких входов строки будут §9объединены §9в §9одну",
  "extra_gauges.ponder.string_gauge.text_4": "§eИмейте §eв §eвиду§r, что постоянность порядка входов не гарантируется",
  "extra_gauges.ponder.string_gauge.text_5": "Кликните ПКМ для открытия интерфейса настройки",
  "extra_gauges.ponder.string_gauge.text_6": "После изменения §eтекста §eобъединения §rна \"§9,§r\" вывод изменится",
  "extra_gauges.ponder.string_gauge.text_7": "Текст также может обрабатываться с помощью двух других текстовых полей",
  "extra_gauges.ponder.string_gauge.text_8": "Датчик будет искать §cсоответствия §cс §cрегулярным §cвыражением§r...",
  "extra_gauges.ponder.string_gauge.text_9": "...и заменять их на §aтекст §aзамены",
  "extra_gauges.ponder.string_gauge.text_10": "§cHouse §r—> §aBase",
  "extra_gauges.ponder.string_gauge_storage.header": "Взаимодействием строковых фабричных датчиков с фабричными контроллерами",
  "extra_gauges.ponder.string_gauge_storage.text_1": "Строковые датчики предназначены для взаимодействия с другими датчиками и, конечно же, фабричными контроллерами",
  "extra_gauges.ponder.string_gauge_storage.text_2": "Они могут считывать название и количество предмета с последнего...",
  "extra_gauges.ponder.string_gauge_storage.text_3": "...и записывать полученное значение в адрес другого контроллера",
  "extra_gauges.ponder.string_gauge_storage.text_4": "Но есть и больше возможностей: при добавлении к §9целочисленному§r или §cлогическому §cдатчику§r...",
  "extra_gauges.ponder.string_gauge_storage.text_5": "...значение, если оно является числом (например, \"§912§r\")...",
  "extra_gauges.ponder.string_gauge_storage.text_6": "...автоматически конвертируется в §9целое §9число §rили соответствующего уровня §cредстоун-сигнал",
  "extra_gauges.ponder.display_collector.header": "Использованием строковых приёмников для получения информации от источников",
  "extra_gauges.ponder.display_collector.text_1": "Строковые приёмники используются для получения динамической информации от источников и её отправки строковым фабричным датчикам",
  "extra_gauges.ponder.display_collector.text_2": "Сначала кликните ПКМ по источнику...",
  "extra_gauges.ponder.display_collector.text_3": "...затем прикрепите приёмник на стену...",
  "extra_gauges.ponder.display_collector.text_4": "...и, наконец, соедините его с датчиком",
  "extra_gauges.ponder.display_collector.text_5": "Откройте интерфейс, чтобы запустить процесс приёма информации",

  "extra_gauges.ponder.expanded_factory_recipes.header": "Созданием предметов на крупных конфигурациях механических сборщиков",
  "extra_gauges.ponder.expanded_factory_recipes.text_1": "§9Дополнительные §9датчики §rдобавляет поддержку более крупных рецептов для фабричных контроллеров",
  "extra_gauges.ponder.expanded_factory_recipes.text_2": "Для этого, конечно же, потребуется крупная конфигурация механических сборщиков",
  "extra_gauges.ponder.expanded_factory_recipes.text_3": "Стандартные рецепты верстака также могут использоваться на таких установках — для этого увеличьте §9ширину§r в §eинтерфейсе§r контроллера",
  "extra_gauges.ponder.expanded_factory_recipes.text_4": "Не беспокойтесь о высоте вашей конфигурации — главное, чтобы она соответствовала минимальной высоте рецепта",

  "create.logistics.int_selection": "Целочисленное значение",
  "extra_gauges.gui.factory_panel.crafting_input_tip_1": "механические сборщики (%s блоков в ширину)",
  "extra_gauges.gui.factory_panel.crafting_input_tip_2": "Минимальная высота: %s блоков",
  "extra_gauges.gui.factory_panel.auto_crafting_input": "Рецепт слишком велик для отображения",
  "extra_gauges.gui.factory_panel.extend_width": "Увеличить ширину до %s блоков",
  "extra_gauges.gui.factory_panel.reduce_width": "Уменьшить ширину до %s блоков",
  "extra_gauges.gui.passive_panel.no_recipe": "Рецепт отсутствует",

  "extra_gauges.gui.string_panel.join": "Объединение:",
  "extra_gauges.gui.string_panel.regex": "Регулярное выражение:",
  "extra_gauges.gui.string_panel.replacement": "Замена:"
}